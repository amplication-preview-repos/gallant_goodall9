/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, LoanStatus as PrismaLoanStatus } from "@prisma/client";

export class LoanStatusServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.LoanStatusCountArgs, "select">
  ): Promise<number> {
    return this.prisma.loanStatus.count(args);
  }

  async loanStatuses(
    args: Prisma.LoanStatusFindManyArgs
  ): Promise<PrismaLoanStatus[]> {
    return this.prisma.loanStatus.findMany(args);
  }
  async loanStatus(
    args: Prisma.LoanStatusFindUniqueArgs
  ): Promise<PrismaLoanStatus | null> {
    return this.prisma.loanStatus.findUnique(args);
  }
  async createLoanStatus(
    args: Prisma.LoanStatusCreateArgs
  ): Promise<PrismaLoanStatus> {
    return this.prisma.loanStatus.create(args);
  }
  async updateLoanStatus(
    args: Prisma.LoanStatusUpdateArgs
  ): Promise<PrismaLoanStatus> {
    return this.prisma.loanStatus.update(args);
  }
  async deleteLoanStatus(
    args: Prisma.LoanStatusDeleteArgs
  ): Promise<PrismaLoanStatus> {
    return this.prisma.loanStatus.delete(args);
  }
}
